{"version":3,"sources":["img/california.png","img/chisty-kaif.png","img/hodim-po-kray.png","img/lubov.png","img/moya-vselennaya.png","img/solnca-ne-vidno.png","img/main.png","questions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","COCTAILS","questions","question","options","key","label","imageMapping","CaliforniaImg","ChistyKaifImg","HodimPoKrayImg","LubovImg","MoyaVselennayaImg","SolncaNeVidno","QuestionCard","index","onSubmit","isLastQuestion","React","useState","value","setValue","isShown","setIsShown","setTimeout","Fade","in","Card","variant","CardContent","Typography","style","marginBottom","FormControl","component","fullWidth","RadioGroup","name","onChange","event","target","map","item","FormControlLabel","lineHeight","control","Radio","Button","disabled","onClick","marginTop","color","STATUSES","getOftenElement","arr","b","maxi","k","App","questionNumber","length","values","useRef","currentQuestion","setCurrentQuestion","status","setStatus","CssBaseline","Container","paddingTop","maxWidth","current","push","className","width","src","MainImg","alt","size","align","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8f8f81d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/california.1c987a6b.png\";","module.exports = __webpack_public_path__ + \"static/media/chisty-kaif.1e219793.png\";","module.exports = __webpack_public_path__ + \"static/media/hodim-po-kray.d4e5d707.png\";","module.exports = __webpack_public_path__ + \"static/media/lubov.5144b8b5.png\";","module.exports = __webpack_public_path__ + \"static/media/moya-vselennaya.4f1e0c69.png\";","module.exports = __webpack_public_path__ + \"static/media/solnca-ne-vidno.1784b130.png\";","module.exports = __webpack_public_path__ + \"static/media/main.428f2138.png\";","export const COCTAILS = {\n    california: 'Калифорния',\n    hodimPoKrau: 'Ходим по краю',\n    lubovBexPamyati: 'Любовь без памяти',\n    solncaNeVidno: 'Солнца не видно',\n    chistyKaif: 'Чистый кайф',\n    moyaVselennaya: 'Моя вселенная',\n};\n\n\nexport const questions = [\n    {\n        question: \"Какое описание больше всего подходит?\",\n        options: [\n            {\n                key: COCTAILS.california,\n                label: \"Я сладкий/ая, т.к. меня уронили в детстве в сироп\"\n            },\n            {\n                key: COCTAILS.hodimPoKrau,\n                label: \"Я не страдаю безумием... Я им наслаждаюсь. \"\n            },\n            {\n                key: COCTAILS.lubovBexPamyati,\n                label: \"Когда красивым налево, а умным направо, мне хоть разорвись\"\n            },\n            {\n                key: COCTAILS.solncaNeVidno,\n                label: \"He люблю я хамов. Зачем мне конкyренты?\"\n            },\n            {\n                key: COCTAILS.chistyKaif,\n                label: \"Я с вами себя таким/ой умным/ой чувствую.\"\n            },\n            {\n                key: COCTAILS.moyaVselennaya,\n                label: \"Я - как хорошее вино: с годами становлюсь крепче, насыщеннее и ярче.\"\n            }\n        ]\n    },\n\n    {\n        question: \"Ваше идеальное времяпрепровождение?\",\n        options: [\n            {\n                key: COCTAILS.chistyKaif,\n                label: \"Я бы весь день валялся/лась на пляже!\"\n            },\n            {\n                key: COCTAILS.moyaVselennaya,\n                label: \"Лучший досуг - проведенный с умом, поэтому почитал/ла бы книгу.\"\n            },\n            {\n                key: COCTAILS.lubovBexPamyati,\n                label: \"Яхта, море и ветер в волосах.\"\n            },\n            {\n                key: COCTAILS.solncaNeVidno,\n                label: \"Прыгнул/ла бы с парашютом. А вообще, любой активный отдых.\"\n            },\n            {\n                key: COCTAILS.hodimPoKrau,\n                label: \"Пойду на рейв.\"\n            },\n            {\n                key: COCTAILS.california,\n                label: \"Время с семьей - это идеально.\"\n            }\n        ]\n    },\n    {\n        question: \"Какую песню вы бы хотели, чтобы DJ поставил именно для вас?\",\n        options: [\n            {\n                key: COCTAILS.hodimPoKrau,\n                label: \"Моргенштерн - самое оно!\"\n            },\n            {\n                key: COCTAILS.chistyKaif,\n                label: \"Я бы повальсировал/ла под Моцарта...\"\n            },\n            {\n                key: COCTAILS.california,\n                label: \"Что-нибудь из репертуара Энрике Иглесиаса...\"\n            },\n            {\n                key: COCTAILS.solncaNeVidno,\n                label: \"Душа просит Queen!\"\n            },\n            {\n                key: COCTAILS.moyaVselennaya,\n                label: \"Мне так нравится Синатра!\"\n            },\n            {\n                key: COCTAILS.lubovBexPamyati,\n                label: \"А можно что-нибудь современное?\"\n            }\n        ]\n    },\n    {\n        question: \"Как вы планируете закончить вечеринку?\",\n        options: [\n            {\n                key: COCTAILS.lubovBexPamyati,\n                label: \"На афтепати в бассейне\"\n            },\n            {\n                key: COCTAILS.moyaVselennaya,\n                label: \"За душевными разговорами\"\n            },\n            {\n                key: COCTAILS.hodimPoKrau,\n                label: \"Танцуя всю ночь\"\n            },\n            {\n                key: COCTAILS.california,\n                label: \"С тортиком и кофейком \"\n            },\n            {\n                key: COCTAILS.solncaNeVidno,\n                label: \"Так, чтобы ничего не помнить на утро\"\n            },\n            {\n                key: COCTAILS.chistyKaif,\n                label: \"За рулем авто, слушая песни Меладзе по дороге домой\"\n            }\n        ]\n    },\n    {\n        question: \"С чем у вас ассоциируется Настя?\",\n        options: [\n            {\n                key: COCTAILS.lubovBexPamyati,\n                label: \"Fashion\"\n            },\n            {\n                key: COCTAILS.solncaNeVidno,\n                label: \"Ремарк\"\n            },\n            {\n                key: COCTAILS.chistyKaif,\n                label: \"Бабочки\"\n            },\n            {\n                key: COCTAILS.hodimPoKrau,\n                label: \"Искусственный интеллект\"\n            },\n            {\n                key: COCTAILS.california,\n                label: \"Задушевные беседы\"\n            },\n            {\n                key: COCTAILS.moyaVselennaya,\n                label: \"Искусство\"\n            }\n        ]\n    }\n];","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Fade from '@material-ui/core/Fade';\n\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport CaliforniaImg from './img/california.png';\nimport ChistyKaifImg from './img/chisty-kaif.png';\nimport HodimPoKrayImg from './img/hodim-po-kray.png';\nimport LubovImg from './img/lubov.png';\nimport MoyaVselennayaImg from './img/moya-vselennaya.png';\nimport SolncaNeVidno from './img/solnca-ne-vidno.png';\n\nimport MainImg from './img/main.png';\n\nimport {questions, COCTAILS} from './questions';\n\nimport './App.css';\n\nconst imageMapping = {\n  [COCTAILS.california]: CaliforniaImg,\n  [COCTAILS.chistyKaif]: ChistyKaifImg,\n  [COCTAILS.hodimPoKrau]: HodimPoKrayImg,\n  [COCTAILS.lubovBexPamyati]: LubovImg,\n  [COCTAILS.moyaVselennaya]: MoyaVselennayaImg,\n  [COCTAILS.solncaNeVidno]: SolncaNeVidno,\n}\n\nconst QuestionCard = ({\n  question,\n  options,\n  index,\n  onSubmit,\n  isLastQuestion,\n}) => {\nconst [value, setValue] = React.useState('');\nconst [isShown, setIsShown] = React.useState(false)\nconst handleChange = (event) => {\n  setValue(event.target.value);\n};\nsetTimeout(() => setIsShown(true), 100)\nreturn (\n  <Fade in={isShown}>\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography style={{marginBottom: 20}} variant=\"h5\">{question}</Typography>\n        <FormControl component=\"fieldset\" fullWidth>\n          <RadioGroup name={`question${index}`} value={value} onChange={handleChange}>\n            {options.map((item, index) => <FormControlLabel style={{lineHeight: 1.2, marginBottom: 10}} key={index} value={item.key} control={<Radio />} label={item.label} />)}\n          </RadioGroup>\n          <Button disabled={!value} onClick={() => {\n            onSubmit(value);\n            setValue('')\n          }} fullWidth style={{marginTop: 20}} variant=\"outlined\" color=\"primary\">\n            { isLastQuestion ? 'Получить коктейль!' : 'Давай дальше!' }\n          </Button>\n        </FormControl>\n      </CardContent>\n    </Card>\n  </Fade>\n  )\n}\n\nconst STATUSES = {\n  init: 'init',\n  question: 'question',\n  result: 'result'\n}\n\nconst getOftenElement = arr => {\n  const b=[];\n  let max='', maxi=0;\n  for(var k in arr) {\n      b[k] ? b[k]++ : b[k]=1;\n      if(maxi<b[k]) { max=k; maxi=b[k] }\n  }\n\n  return maxi\n}\n\nfunction App() {\n  const questionNumber = questions.length;\n  const values = React.useRef([]);\n  const [currentQuestion, setCurrentQuestion] = React.useState(0);\n  const [status, setStatus] = React.useState(STATUSES.init);\n\n  const handleNextSlide = (value) => {\n    values.current.push(value);\n    if (currentQuestion === questionNumber -1) {\n      setStatus(STATUSES.result);\n      return;\n    }\n    setCurrentQuestion(currentQuestion + 1);\n  }\n\n  const isLastQuestion = currentQuestion === questionNumber -1;\n\n  const handleReset = () => {\n    values.current = [];\n    setCurrentQuestion(0);\n    setStatus(STATUSES.init);\n  }\n\n  return (\n    <div >\n      <CssBaseline />\n      <Container style={{paddingTop: 20}} maxWidth=\"md\">\n        {\n          status === STATUSES.question &&\n            <QuestionCard isLastQuestion={isLastQuestion} index={currentQuestion} onSubmit={handleNextSlide} {...questions[currentQuestion]}/>\n        }\n        {\n          status === STATUSES.init &&\n            <>\n              <img className=\"imgWithBounceAnimation\" style={{width: '100%'}} src={MainImg} alt=\"main-img\"/>\n              <Button size=\"large\" onClick={() => setStatus(STATUSES.question)} fullWidth style={{marginTop: 20}} variant=\"contained\" color=\"secondary\">\n                Я хочу коктейль!\n              </Button>\n            </>\n        }\n        {\n          status === STATUSES.result && <>\n            <Typography align=\"center\" variant=\"h5\">Супер! Ваш коктейль:</Typography>\n            <img className=\"imgWithUpDownAnimation\" alt=\"Коктейль\" src={imageMapping[values.current[getOftenElement(values.current)]]} />\n\n            <Button size=\"large\" onClick={handleReset} fullWidth variant=\"contained\" color=\"secondary\">\n                Давай сначала!\n              </Button>\n          </>\n        }\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}